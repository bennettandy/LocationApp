plugins {
    id("kotlin-kapt")
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id("dagger.hilt.android.plugin")
}

android {
    namespace Modules.appNamespace
    compileSdk ProjectConfig.compileSdk

    defaultConfig {
        minSdk ProjectConfig.minSdk
        targetSdk ProjectConfig.targetSdk
        versionCode ProjectConfig.versionCode
        versionName ProjectConfig.versionName

        // development code to inject field into BuildConfig
        buildConfigField "boolean", "ANALYTICS", "false"

        testInstrumentationRunner Testing.testInstrumentationRunner
        consumerProguardFiles "consumer-rules.pro"
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Compose.composeCompilerVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    implementation(project(Modules.commonUi))
    implementation(project(Modules.common))
    implementation(project(Modules.locationPresentationModule))
    implementation(project(Modules.spacelaunchPresentationModule))

    implementation(platform(Compose.bom))
    implementation(AndroidX.coreKtx)
    implementation(AndroidX.appCompat)
    implementation(MaterialDesign.material)
    implementation(Compose.lifecycleRuntime)
    implementation(Compose.activityCompose)
    implementation(Compose.ui)
    implementation(Compose.uiGraphics)
    implementation(Compose.uiToolingPreview)
    implementation(MaterialDesign.material3)
    implementation(Navigation.navigationCompose)
    implementation(Timber.timber)


    implementation DaggerHilt.hiltAndroid
    implementation AndroidX.coreKtx
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    kapt DaggerHilt.hiltCompiler

    coreLibraryDesugaring Build.coreLibraryDesugar


    testImplementation Testing.junit4
    testImplementation Testing.junitAndroidExt
    testImplementation Testing.truth
    testImplementation Testing.coroutines
    testImplementation Testing.turbine
    testImplementation Testing.composeUiTest
    testImplementation Testing.mockk
    testImplementation Testing.mockWebServer

    androidTestImplementation Testing.junit4
    androidTestImplementation Testing.junitAndroidExt
    androidTestImplementation Testing.truth
    androidTestImplementation Testing.coroutines
    androidTestImplementation Testing.turbine
    androidTestImplementation Testing.composeUiTest
    androidTestImplementation Testing.mockk
    androidTestImplementation Testing.mockWebServer
    androidTestImplementation Testing.hiltTesting

//    implementation platform(Compose.bom)

    // Roboelectric
    testImplementation RoboElectric.roboElectric
    testImplementation Testing.composeUiTest
    debugImplementation Testing.uiTestManifest
    // For Robolectric tests.
    testImplementation DaggerHilt.hiltTest
    kaptTest DaggerHilt.hiltCompiler
    testAnnotationProcessor DaggerHilt.hiltCompiler

    // For instrumented tests.
    androidTestImplementation DaggerHilt.hiltTest
    kaptAndroidTest DaggerHilt.hiltCompiler
    androidTestAnnotationProcessor DaggerHilt.hiltCompiler
}